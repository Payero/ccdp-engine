<project name="Mesos Framework" default="main" basedir=".">
	<description>
		Create a Java Project (JAR) with Ant build script
	</description>

	<property name="executor.name" value="mesos-ccdp-exec" />
	<property name="agent.name" value="ccdp-agent" />
 	<property name="engine.name" value="ccdp-engine" />
  <property name="client.name" value="ccdp-client" />
  <property name="connection.name" value="ccdp-client-connection" />

  <!-- Determines whether to compile as 1.7 or 1.8 
       It relies on having a link pointing to the rt.jar as follow:
       /usr/java/jdk-${tgt.jdk}/jre/lib/rt.jar
  -->
  <property name="tgt.jdk" value="1.7" />

	<!-- Java sources -->
	<property name="src.dir" location="src" />

	<!-- Java classes directory -->
	<property name="classes.dir" location="classes" />

	<!-- Java classes -->
	<property name="build.dir" location="build" />

	<!-- Java classes -->
	<property name="main.dir" location="${build.dir}/main" />

	<!-- The base distribution directory -->
	<property name="base.dist.dir" location="dist" />

	<!-- The name of the distribution directory -->
	<property name="dist.dir" location="${base.dist.dir}/ccdp-engine" />

	<!--Thirdparty jars/libaries -->
	<property name="lib.dir" location="lib" />

 	<!--Scripts used to run -->
 	<property name="install.dir" location="bin" />

 	<!--The location of the javadoc directory -->
 	<property name="doc.dir" location="docs" />
	
	<!--The location of the report directory -->
	<property name="report.dir" location="reports" />
	
	<!--The location of the test directory -->
	<property name="test.src.dir" location="src/com/axios/ccdp/test/unittest" />
	<property name="test.bld.dir" location="${build.dir}/test" />
	
	<property name="ccdp.config.file" 
		value="${basedir}/config/ccdp-config.properties" />
	
	<path id="classpath">
	  <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>
	
	<!-- ***************************************************************** -->
	<!-- ****************  Start  Testing Targets (JUnit) **************** -->
  	
	<path id="classpath.test">
	  <fileset dir="${lib.dir}" includes="**/*.jar"/>
		<pathelement location="${main.dir}" />
	</path>


  <target name="test-compile" depends="compile">
    <mkdir dir="${test.bld.dir}"/>
  	<mkdir dir="${report.dir}"/>
    <javac srcdir="${test.src.dir}" 
    	   destdir="${test.bld.dir}" 
         target="${tgt.jdk}"
         source="${tgt.jdk}"
         bootclasspath="/usr/java/jdk-${tgt.jdk}/jre/lib/rt.jar"
         includeantruntime="false">
    	<classpath refid="classpath.test"/>
    </javac>
  </target>


	<!-- Runs all the unit tests by calling each one of the test target -->
	<target name="test.all" 
          depends="test.tasks.gen, test.aws.controller, test.amq.connection" />
	
  <!-- Shows a message with the names of all the unitests available -->
  <target name="which.test" 
          description="Shows the names of all the unitests available">
	  <echo message="The Tests available to run:" />
		<echo message="    test.tasks.gen" />
		<echo message="    test.aws.controller" />
		<echo message="    test.amq.connection" />
	</target>
	

  <!-- Runs ALL Unit Tests -->
  <target name="test.amq.connection" depends="test-compile">
    <antcall target="junit.testing">
      <param name="test.pattern" value="**/**UnitTest" />
    </antcall>
   </target>


	<!-- Runs all the unit tests generating Thread Requests -->
	<target name="test.tasks.gen" depends="test-compile">
		<antcall target="junit.testing">
			<param name="test.pattern" value="ThreadRequestsGeneratorUnitTest" />
		</antcall>
	</target>
	
	<!-- Runs all the unit tests to the the AWS tasking controller interface -->
	<target name="test.aws.controller" depends="test-compile">
	  <antcall target="junit.testing">
	    <param name="test.pattern" value="AWSControllerUnitTest" />
	  </antcall>
	</target>

  <!-- Runs all the unit tests to the the AWS tasking controller interface -->
  <target name="test.amq.connection" depends="test-compile">
	  <antcall target="junit.testing">
	    <param name="test.pattern" value="AmqConnectionsUnitTest" />
	  </antcall>
	 </target>

	<!-- Runs all the unit tests based on the file name pattern to include -->
  <target name="junit.testing" depends="test-compile">
    <junit printsummary="yes" haltonfailure="no" fork="true">

    	<sysproperty key="ccdp.config.file" value="${ccdp.cfg.file}" />
    	
        <classpath>
          <path refid="classpath.test"/>
          <pathelement location="${main.dir}"/>
        </classpath>
        <formatter type="brief" usefile="false" />
        <batchtest todir="${report.dir}">
        	<fileset dir="${src.dir}" includes="**/${test.pattern}.java" />
            <!-- <fileset dir="${src.dir}" includes="**/*UnitTest.java" /> -->
        </batchtest>
    </junit>
  </target>
	
	
	
	<!-- ******************  End  Testing Targets (JUnit) ***************** -->
	<!-- ****************************************************************** -->
	
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${main.dir}" />
		<!-- <mkdir dir="${classes.dir}" /> -->
	</target>

	<target name="compile" depends="init" description="compiles the source ">
		<!-- Compile the java code from ${src.dir} into ${main.dir} -->
		<javac includeantruntime="false" 
				 debug="true"
			   srcdir="${src.dir}" 
			   destdir="${main.dir}" 
         target="${tgt.jdk}"
         source="${tgt.jdk}" 
         bootclasspath="/usr/java/jdk-${tgt.jdk}/jre/lib/rt.jar"
			   classpathref="classpath"/>
	</target>


  <!-- Generates the distro package for the ccdp-engine -->
  <target name="ccdp.engine.dist" depends="clean.eng.dist,compile" 
  	      description="Creates the ccdp-engine distribution package">
	<mkdir dir="${dist.dir}" />  	
	<mkdir dir="${dist.dir}/bin" />
  <mkdir dir="${dist.dir}/config" />
  <mkdir dir="${dist.dir}/lib" />
  <mkdir dir="${dist.dir}/python" />
	
	<jar destfile="${dist.dir}/lib/${engine.name}.jar" >
    <manifest>
      <attribute name="Main-Class" 
                 value="com.axios.ccdp.newgen.CcdpAgent"/>
    </manifest>
    <fileset dir="${main.dir}" includes="*.properties" />
  	<fileset dir="${main.dir}"/>

    <zipgroupfileset dir="${lib.dir}" includes="*.jar"/>
  </jar>

  <jar destfile="${dist.dir}/lib/${executor.name}.jar" >
    <manifest>
      <attribute name="Main-Class" 
                 value="com.axios.ccdp.mesos.fmwk.CcdpCommandExecutor"/>
    </manifest>
    <fileset dir="${main.dir}" includes="*.properties" />
    <fileset dir="${main.dir}"/>

    <zipgroupfileset dir="${lib.dir}" includes="*.jar"/>
  </jar>

  <jar destfile="${base.dist.dir}/${client.name}.jar" >
    <fileset dir="${main.dir}"/>
  </jar>

  <jar destfile="${base.dist.dir}/${connection.name}.jar" >
    <fileset dir="${main.dir}"/>
  </jar>


	<!-- Copy files to the bin directory -->
	<copy todir="${dist.dir}/bin">
    <fileset  dir="${basedir}/bin"/>
  </copy>

  <copy todir="${dist.dir}/config">
    <fileset  dir="${basedir}/config"/>
  </copy>
  <copy todir="${dist.dir}/python">
    <fileset  dir="${basedir}/python"/>
  </copy>

	<chmod dir="${dist.dir}/bin" 
		   perm="777" includes="**/*.sh"/>
  <chmod dir="${dist.dir}/python" 
    	   perm="777" includes="**/*.py"/>

  </target>

  <!-- Generates the conmpressed file for distribution  -->
  <target name="gen.tar" depends="ccdp.engine.dist"
          description="Generates the conmpressed file for distribution">
    <tar destfile="${base.dist.dir}/${engine.name}.tgz" compression = "gzip">
      <tarfileset dir="${dist.dir}/bin" 
                  prefix="ccdp-engine/bin" filemode="755" />
      <tarfileset dir="${dist.dir}/config" 
                  prefix="ccdp-engine/config" />
      <tarfileset dir="${dist.dir}/lib" 
                  prefix="ccdp-engine/lib" />
      <tarfileset dir="${dist.dir}/python" 
                  prefix="ccdp-engine/python" filemode="755" />
     </tar>

  </target>



  <!-- Removes all the files creatd during the eng dist -->
  <target name="clean.eng.dist" 
  	description="Cleans all the files generated by the engine dist. target">
  	<delete dir="${dist.dir}" />
  	<delete file="${base.dist.dir}/ccdp-engine.tar" />
  	<delete file="${base.dist.dir}/ccdp_install.py" />
  </target>

	<target name="clean" description="clean up">
		<delete dir="${build.dir}" />
		<delete dir="${base.dist.dir}" />
    	<delete dir="${doc.dir}" />
		<delete dir="${report.dir}" />
		<!-- <delete dir="${classes.dir}" /> -->
	</target>
	
  <!-- Creates a README file explaining that is is just an install directory -->
  <target name="create.file" description="Creates a readme file">
    <echo file="${dist.dir}/README" append="false">
      This directory was created and installed automatically
    </echo>
  </target>

  <!-- Generates the JavaDoc for the whole project -->
  <target name="javadocs" depends="javadoc" 
          description="Generates the JavaDoc for the whole project" />
  <target name="javadoc" depends="compile" description="Generates JavaDoc">
    <javadoc sourcepath="${src.dir}" 
             destdir="${doc.dir}">
      <classpath>
        <fileset dir="${lib.dir}" includes="*.jar" />
        
      </classpath>
    </javadoc>
  </target>


<!-- Default, run this -->
<target name="main" depends="clean,compile,ccdp.engine.dist,javadoc,gen.tar" 
        description="Runs all the targets" />


</project>
