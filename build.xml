<project name="Mesos Framework" default="main" basedir=".">
	<description>
		Create a Java Project (JAR) with Ant build script
	</description>

	<property name="project.name" value="mesos-dra" />
	<property name="executor.name" value="mesos-ccdp-exec" />
	<property name="agent.name" value="ccdp-agent" />
    <property name="engine.name" value="mesos-engine" />

	<!-- Java sources -->
	<property name="src.dir" location="src" />

	<!-- Java classes -->
	<property name="build.dir" location="build" />

	<!-- Java classes -->
	<property name="main.dir" location="${build.dir}/main" />

	
	<!-- Output, Jar -->
	<property name="dist.dir" location="dist/CCDP" />

	<!--Thirdparty jars/libaries -->
	<property name="lib.dir" location="lib" />

  <!--Scripts used to run -->
  <property name="install.dir" location="bin" />

  <!--Scripts used to run -->
  <property name="scripts.dir" location="scripts" />

  <!--The location of the javadoc directory -->
  <property name="doc.dir" location="docs" />
	
	<!--The location of the report directory -->
	<property name="report.dir" location="reports" />
	
	<!--The location of the test directory -->
	<property name="test.src.dir" location="src/com/axios/ccdp/test/unittest" />
	<property name="test.bld.dir" location="${build.dir}/test" />
	
	<property name="ccdp.config.file" value="${basedir}/config/ccdp-config.properties" />
	
	<path id="classpath">
	  <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>
	
	<!-- ***************************************************************** -->
	<!-- ****************  Start  Testing Targets (JUnit) **************** -->
	
	<path id="classpath.test">
	  <fileset dir="${lib.dir}" includes="**/*.jar"/>
		<pathelement location="${main.dir}" />
	</path>
	
  <target name="test-compile" depends="compile">
    <mkdir dir="${test.bld.dir}"/>
  	<mkdir dir="${report.dir}"/>
    <javac srcdir="${test.src.dir}" destdir="${test.bld.dir}" includeantruntime="false">
        <classpath refid="classpath.test"/>
    </javac>
  </target>

	<!-- Runs all the unit tests by calling each one of the test target -->
	<target name="test.all" depends="test.tasks.gen, test.aws.controller, test.amq.connection" />
	<target name="which.test">
	  <echo message="The Tests available to run:" />
		<echo message="    test.tasks.gen" />
		<echo message="    test.aws.controller" />
		<echo message="    test.amq.connection" />
	</target>
	
	<!-- Runs all the unit tests generating Thread Requests -->
	<target name="test.tasks.gen" depends="test-compile">
		<antcall target="junit.testing">
			<param name="test.pattern" value="ThreadRequestsGeneratorUnitTest" />
		</antcall>
	</target>
	
	<!-- Runs all the unit tests to the the AWS tasking controller interface -->
	<target name="test.aws.controller" depends="test-compile">
	  <antcall target="junit.testing">
	    <param name="test.pattern" value="AWSControllerUnitTest" />
	  </antcall>
	</target>

  <!-- Runs all the unit tests to the the AWS tasking controller interface -->
  <target name="test.amq.connection" depends="test-compile">
	  <antcall target="junit.testing">
	    <param name="test.pattern" value="AmqConnectionsUnitTest" />
	  </antcall>
	 </target>

	<!-- Runs all the unit tests based on the file name pattern to include -->
  <target name="junit.testing" depends="test-compile">
    <junit printsummary="yes" haltonfailure="no" fork="true">
    	<sysproperty key="ccdp.config.file" 
    		           value="${basedir}/config/ccdp-config.properties" />
    	
        <classpath>
          <path refid="classpath.test"/>
          <pathelement location="${main.dir}"/>
        </classpath>
        <formatter type="brief" usefile="false" />
        <batchtest todir="${report.dir}">
        	<fileset dir="${src.dir}" includes="**/${test.pattern}.java" />
            <!-- <fileset dir="${src.dir}" includes="**/*UnitTest.java" /> -->
        </batchtest>
    </junit>
  </target>
	
	
	
	<!-- ******************  End  Testing Targets (JUnit) ***************** -->
	<!-- ****************************************************************** -->
	
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${main.dir}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src.dir} into ${main.dir} -->
		<javac includeantruntime="false" 
				 debug="true"
			   srcdir="${src.dir}" 
			   destdir="${main.dir}" 
			   classpathref="classpath"/>
	</target>

	<target name="dist" depends="compile" description="package, output to JAR">

		<!-- Create the distribution directory -->
		<mkdir dir="${dist.dir}" />

		<!-- Put everything in ${main} into a jar file -->
		<jar jarfile="${dist.dir}/${project.name}-${DSTAMP}.jar" 
         basedir="${main.dir}" >
		    <manifest>
			    <!-- create an executable Jar -->
			    <attribute name="Main-Class" 
                     value="com.axios.ccdp.mesos.fmwk.CcdpCommandExecutor" />
		    </manifest>
		</jar>
	</target>

	<target name="clean" description="clean up">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
    <delete dir="${doc.dir}" />
		<delete dir="${report.dir}" />
	</target>
	
  <!-- Creates a README file explaining that is is just an install directory -->
  <target name="create.file" description="Creates a readme file">
    <echo file="${dist.dir}/README" append="false">
      This directory was created and installed automatically
    </echo>
  </target>

  <!-- Generate all the jars and copies all the corresponding files 
       in the right places by using other targets
  -->
	<target name="gen.jars" depends="compile,copy.scripts,create.file">
		<!-- <copy file="${basedir}/config/log4j.properties" todir="${main.dir}" /> -->

    <jar destfile="${dist.dir}/${executor.name}.jar" >
        <manifest>
            <attribute name="Main-Class" 
                       value="com.axios.ccdp.mesos.fmwk.CcdpCommandExecutor"/>
        </manifest>
        <fileset dir="${main.dir}" includes="*.properties" />
  		<fileset dir="${main.dir}"/>

        <zipgroupfileset dir="${lib.dir}" includes="*.jar"/>
    </jar>

    <copy file="${basedir}/config/ccdp-config.properties" todir="${main.dir}"/>
    <jar destfile="${dist.dir}/${engine.name}.jar" >
        <manifest>
            <attribute name="Main-Class" 
                       value="com.axios.ccdp.fmwk.CCDPEngineMain"/>
        </manifest>
        <fileset dir="${main.dir}" includes="*.properties" />
      <fileset dir="${main.dir}"/>

        <zipgroupfileset dir="${lib.dir}" includes="*.jar"/>
    </jar>

	<jar destfile="${dist.dir}/${agent.name}.jar" >
        <manifest>
            <attribute name="Main-Class" 
                       value="com.axios.ccdp.newgen.CcdpAgent"/>
        </manifest>
        <fileset dir="${main.dir}" includes="*.properties" />
  		<fileset dir="${main.dir}"/>

        <zipgroupfileset dir="${lib.dir}" includes="*.jar"/>
    </jar>

	</target>


  <!-- Generates the JavaDoc for the whole project -->
  <target name="javadocs" depends="javadoc" />
  <target name="javadoc" depends="compile" description="Generates JavaDoc">
    <javadoc sourcepath="${src.dir}" destdir="${doc.dir}">
      <classpath>
        <fileset dir="${lib.dir}" includes="*.jar" />
        
      </classpath>
    </javadoc>
  </target>

  <!-- Copies the contents of the scripts dir and sets the permissions -->
  <target name="copy.scripts" 
          description="Copies all the scripts to the dist directory"
          depends="copy.install">
    <copy todir="${dist.dir}/scripts">
      <fileset dir="${scripts.dir}"/>
    </copy>
    
    <copy file="${basedir}/config/ccdp-config.properties" todir="${dist.dir}" />
    <copy file="${basedir}/config/log4j.properties" todir="${dist.dir}" />

    <chmod dir="${dist.dir}/scripts" perm="777" includes="**/*.sh"/>
    <chmod dir="${dist.dir}/scripts" perm="777" includes="**/*.py"/>
  </target>

  <!-- Copies the contents of the inst dir and sets the permissions -->
  <target name="copy.install" 
          description="Copies all the scripts to the dist directory">
    <copy todir="${dist.dir}/bin">
      <fileset dir="${install.dir}"/>
    </copy>
    
    <chmod dir="${dist.dir}/bin" perm="777" includes="**/*.sh"/>
    <chmod dir="${dist.dir}/bin" perm="777" includes="**/*.py"/>
  </target>

 	<!-- Default, run this -->
	<target name="main" depends="clean, compile, dist, gen.jars,javadoc" />

	
</project>
