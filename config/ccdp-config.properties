#################################################################
##
##  Stores the log4j file to use to control the verbosity
##
log4j.config.file=${CCDP_HOME}/config/log4j.properties
ccdp.logs.dir=${CCDP_HOME}/logs


#################################################################
##
##  How often to check for resource allocation/deallocation in seconds
##  If not provided then it uses the default which is 5 seconds
##  This is also used to determine when an agent is no longer available.  If
##  an agent fails to report within (4* resources.checking.cycle), then is
##  considered missing and removed from the list of resources available
##
resources.checking.cycle=5

#################################################################
##
##  If set to true, it skips sending heartbeats to the main application.
##  This is useful for testing when want to avoid overloading the system with
##  messages, but it is not recommended for production
##
#do.not.send.hearbeat=true

#################################################################
##
##  Sets the name of the class used to send and receiver messages with new
##  tasks to process.  This class must implement the CcdpTaskingIntf interface
##
connection.intf.classname=com.axios.ccdp.connections.amq.AmqCcdpConnectionImpl

#################################################################
##
##  Sets the name of the class used to allocate tasks and to determine whether
##  a new VM is required or if it needs to be terminated.  This class must
##  implement the CcdpTaskingControllerIntf interface
##
task.allocator.intf.classname=com.axios.ccdp.controllers.NumberTasksControllerImpl
#task.allocator.intf.classname=com.axios.ccdp.controllers.AvgLoadControllerImpl

#################################################################
##
##  Sets the name of the class used to interact with the cloud provider to
##  start/stop resources or Virtual Machines (VM).  This class must implement
##  the CcdpCcdpVMControllerIntf interface
##
resource.intf.classname=com.axios.ccdp.cloud.aws.AWSCcdpVMControllerImpl
#resource.intf.classname=com.axios.ccdp.cloud.sim.SimCcdpVMControllerImpl
#resource.intf.classname=com.axios.ccdp.cloud.docker.DockerVMControllerImpl

#################################################################
##
##  Sets the name of the class used handle different storage solution.  This
##  class must implement the CcdpStorageControllerIntf interface
##
storage.intf.classname=com.axios.ccdp.cloud.aws.AWSCcdpStorageControllerImpl
#storage.intf.classname=com.axios.ccdp.cloud.sim.SimCcdpStorageControllerImpl
#storage.intf.classname=com.axios.ccdp.cloud.docker.DockerStorageControllerImpl

#################################################################
##
##  Sets the name of the class used to monitor the resources on the agent node.
##  class must implement the SystemResourceMonitorIntf interface
##
#res.mon.intf.classname=com.axios.ccdp.utils.WindowsResourceMonitorImpl
res.mon.intf.classname=com.axios.ccdp.utils.LinuxResourceMonitorImpl
#res.mon.intf.classname=com.axios.ccdp.cloud.docker.DockerResourceMonitorImpl

#################################################################
##
##  Sets the units to use by the CcdpAgent when reporting resource utilization.
##
##  If is not defined it uses the default units which is KB
res.mon.intf.units=MB
##  How to reach the docker engine
res.mon.intf.docker.url=http://172.17.0.1:2375


#################################################################
##
##  Default destination to send tasking responses if not set in the task
##  itself.  If this is not set, then no data is sent
##
#from.scheduler.channel=CcdpTaskingActivityUpdates


########################################################################
##                                                                    ##
##  The following set of properties use the start of the name to      ##
##  set the parameters of each type of object and cannot be           ##
##  changed                                                           ##
##                                                                    ##
##    taskingIntf:    Receives tasks from external sources            ##
##    taskContrIntf:  Determines the task allocation logic            ##
##    resourceIntf:   Starts/stops all the resources                  ##
##    storageIntf:    Stores and deletes data from storage solutions  ##
##                                                                    ##
##                                                                    ##
########################################################################

#-------------------------------------------------------------------------#
#--------------- Tasking Messaging Interface Configuration  --------------
#-------------------------------------------------------------------------#


connectionIntf.broker.connection=failover://tcp://localhost:61616
#connectionIntf.broker.connection=failover://tcp://ax-ccdp.com:61616
ccdp.main.queue=CCDP-Engine




#################################################################
##
##  A comma delimited list of host IDs that should not be terminated due to lack
##  of resource utilization.  These nodes needs to be running at any given time.
##
do.not.terminate=i-0fa470f3da73d8ac0,i-0a1679a0cb4aba5dd

#-------------------------------------------------------------------------#
#-------------- Tasking Controller Interface Configuration  --------------
#-------------------------------------------------------------------------#

#################################################################
##
## The average load for all the VMs in the same session.  Once this average
## is reached for more than the average load time (in minutes) then it will
## start a new VM.
##
## If the max.number.of.tasks is set, then it will not run assign the task to
## the running resource when it reaches that capacity
##
taskContrIntf.allocate.avg.load.cpu=80
taskContrIntf.allocate.avg.load.mem=15
taskContrIntf.allocate.avg.load.time=2
taskContrIntf.allocate.no.more.than=5

## Deallocation parameters, once is low it will stop tasking it and when it
## reaches 0 it stops it
taskContrIntf.deallocate.avg.load.cpu=20
taskContrIntf.deallocate.avg.load.mem=20
taskContrIntf.deallocate.avg.load.time=2

#-------------------------------------------------------------------------#
#-------------- Resource Controller Interface Configuration  -------------
#-------------------------------------------------------------------------#

##
##  The AWS Settings if to allow the docker container to access the S3 bucket
##  where the install file is located
#resourceIntf.aws.access.id=AKIAILDTHAKOE7G3SFGA
#resourceIntf.aws.secret.key=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
#resourceIntf.aws.region=us-east-1
##
##  The settings above are not required if the file comes from a file system
resourceIntf.dist.file=${CCDP_HOME}/dist/ccdp-engine.tgz


#################################################################
##
## If the node or the request do not have the node type assigned then this
## is the one used as the default
##


#####################################################################
##
##Resource information for Docker Containers
##

#resourceIntf.docker.image.id=payero/centos-7:ccdp
#resourceIntf.docker.min.number.free.agents=0
##resourceIntf.docker.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -w -t /data/ccdp
## RUNNING DOCKER INSTALLING FROM S3 BUCKET
##resourceIntf.docker.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -t /data/ccdp -D -n DOCKER
## RUNNING DOCKER INSTALLING FROM FILESYSTEM
#resourceIntf.docker.startup.command=/data/ccdp/ccdp_install.py -t /data/ccdp -D -n DOCKER
#
#
#resourceIntf.default.image.id=payero/centos-7:ccdp
#resourceIntf.default.min.number.free.agents=0
## RUNNING DOCKER INSTALLING FROM S3 BUCKET
##resourceIntf.default.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -t /data/ccdp -D -n DEFAULT
## RUNNING DOCKER INSTALLING FROM FILESYSTEM
#resourceIntf.default.startup.command=/data/ccdp/ccdp_install.py -t /data/ccdp -D -n DEFAULT
#
#resourceIntf.ec2.image.id=payero/centos-7:ccdp
#resourceIntf.ec2.min.number.free.agents=0
## RUNNING DOCKER INSTALLING FROM S3 BUCKET
##resourceIntf.default.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -t /data/ccdp -D -n EC2
## RUNNING DOCKER INSTALLING FROM FILESYSTEM
#resourceIntf.ec2.startup.command=/data/ccdp/ccdp_install.py -t /data/ccdp -D -n EC2
#
#resourceIntf.nifi.image.id=payero/ccdp-nifi:ccdp
#resourceIntf.nifi.min.number.free.agents=0
## RUNNING DOCKER INSTALLING FROM S3 BUCKET
##resourceIntf.default.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -t /data/ccdp -D -n EC2
## RUNNING DOCKER INSTALLING FROM FILESYSTEM
#resourceIntf.nifi.startup.command=/data/ccdp/ccdp_install.py -t /data/ccdp -D -n NIFI


#####################################################################
##
##Resource information for Amazon instances
##

resourceIntf.default.image.id=ami-00960e391c6790e70
resourceIntf.default.min.number.free.agents=0
resourceIntf.default.security.group=sg-54410d2f
resourceIntf.default.subnet.id=subnet-d7008b8f
resourceIntf.default.key.file.name=aws_serv_server_key
resourceIntf.default.tags={"session-id": "Service-Node", "Name": "Host-Agent"}
resourceIntf.default.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -w -t /data/ccdp
##resourceIntf.default.assignment.command=/home/oeg/scripts/test.sh
##resourceIntf.default.region=us-east-1
##resourceIntf.default.role.name=my-Role
##resourceIntf.default.proxy.url=my-url-to-ge/to/the/proxy
##resourceIntf.default.proxy.port=1234
##resourceIntf.default.credentials.file=/home/oeg/.aws/credentials
##resourceIntf.default.credentials.profile.name=default
#
#
resourceIntf.ec2.image.id=ami-00960e391c6790e70
resourceIntf.ec2.min.number.free.agents=0
resourceIntf.ec2.security.group=sg-54410d2f
resourceIntf.ec2.subnet.id=subnet-d7008b8f
resourceIntf.ec2.key.file.name=aws_serv_server_key
resourceIntf.ec2.tags={"session-id": "Service-Node", "Name": "Host-Agent"}
resourceIntf.ec2.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -w -t /data/ccdp -n EC2
##resourceIntf.ec2.assignment.command=/home/oeg/scripts/test.sh
##resourceIntf.ec2.region=us-east-1
##resourceIntf.ec2.role.name=my-Role
##resourceIntf.ec2.proxy.url=my-url-to-ge/to/the/proxy
##resourceIntf.ec2.proxy.port=1234
##resourceIntf.ec2.credentials.file=/home/oeg/.aws/credentials
##resourceIntf.ec2.credentials.profile.name=default
#
#
#
#
resourceIntf.nifi.image.id=ami-075cb764a295e450f
resourceIntf.nifi.min.number.free.agents=0
resourceIntf.nifi.instance.type=t2.medium
resourceIntf.nifi.security.group=sg-54410d2f
resourceIntf.nifi.subnet.id=subnet-d7008b8f
resourceIntf.nifi.key.file.name=aws_serv_server_key
resourceIntf.nifi.tags={"session-id": "NiFi-Node", "Name": "NiFi-Agent"}
resourceIntf.nifi.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -w -t /data/ccdp -n NIFI
#resourceIntf.nifi.assignment.command=/data/ccdp/run_nifi.sh start

#-------------------------------------------------------------------------#
#-------------- Storage Controller Interface Configuration  --------------
#-------------------------------------------------------------------------#

#################################################################
##
#storageIntf








