#################################################################
##
##  Stores the log4j file to use to control the verbosity
##
log4j.config.file=${CCDP_HOME}/config/log4j.properties
ccdp.logs.dir=${CCDP_HOME}/logs

#################################################################
##
##  The executor needs a self contain jar file.  This property is used to 
##  determine the location of such jar.  Required to build the cmdInfo URI
##
executor.src.jar.file=/data/ccdp/ccdp-engine/lib/mesos-ccdp-exec.jar

#################################################################
##
##  The actual command to run by mesos.  This is required when different JVMs  
##  are installed and we require to run on one different than the default
##
executor.cmd.line=/usr/bin/java -cp /data/ccdp/ccdp-engine/lib/mesos-ccdp-exec.jar com.axios.ccdp.mesos.fmwk.CcdpCommandExecutor


#################################################################
##
##  The URL used by the Mesos Master to receive incoming Mesos Agents 
##  registrations
##
#mesos.master.uri=127.0.0.1:5050
mesos.master.uri=10.215.34.73:5050  
#mesos.master.uri=192.168.86.31:5050  
#mesos.master.uri=52.205.26.225:5050


#################################################################
##
##  How often to check for resource allocation/deallocation in seconds 
##  If not provided then it uses the default which is 5 seconds
##  This is also used to determine when an agent is no longer available.  If
##  an agent fails to report within (4 * resources.checking.cycle), then is 
##  considered missing and removed from the list of resources available 
##
resources.checking.cycle=5

#################################################################
##
##  If set to true, it skips sending heartbeats to the main application. 
##  This is useful for testing when want to avoid overloading the system with
##  messages, but it is not recommended for production
##
#do.not.send.hearbeat=true

#################################################################
##
##  Sets the name of the class used to send and receiver messages with new
##  tasks to process.  This class must implement the CcdpTaskingIntf interface
##  
connection.intf.classname=com.axios.ccdp.connections.amq.AmqCcdpConnectionImpl

#################################################################
##
##  Sets the name of the class used to allocate tasks and to determine whether
##  a new VM is required or if it needs to be terminated.  This class must 
##  implement the CcdpTaskingControllerIntf interface
##   
#task.allocator.intf.classname=com.axios.ccdp.controllers.aws.AvgLoadControllerImpl
#task.allocator.intf.classname=com.axios.ccdp.controllers.aws.NumberTasksControllerImpl
task.allocator.intf.classname=com.axios.ccdp.newgen.NumberTasksControllerImpl

#################################################################
##
##  Sets the name of the class used to interact with the cloud provider to 
##  start/stop resources or Virtual Machines (VM).  This class must implement 
##  the CcdpCcdpVMControllerIntf interface
## 
resource.intf.classname=com.axios.ccdp.controllers.aws.AWSCcdpVMControllerImpl

#################################################################
##
##  Sets the name of the class used handle different storage solution.  This 
##  class must implement the CcdpStorageControllerIntf interface
##  
storage.intf.classname=com.axios.ccdp.controllers.aws.AWSCcdpStorageControllerImpl

  
#################################################################
##
##  Default destination to send tasking responses if not set in the task 
##  itself.  If this is not set, then no data is sent
##
#from.scheduler.channel=CcdpTaskingActivityUpdates


########################################################################
##                                                                    ##
##  The following set of properties use the start of the name to      ##
##  set the parameters of each type of object and cannot be           ##
##  changed                                                           ##
##                                                                    ##
##    taskingIntf:    Receives tasks from external sources            ##
##    taskContrIntf:  Determines the task allocation logic            ##
##    resourceIntf:   Starts/stops all the resources                  ##
##    storageIntf:    Stores and deletes data from storage solutions  ##
##                                                                    ##
##                                                                    ##
########################################################################

#-------------------------------------------------------------------------#
#--------------- Tasking Messaging Interface Configuration  --------------
#-------------------------------------------------------------------------#
connectionIntf.broker.connection=failover://tcp://localhost:61616
#failover://tcp://ax-ccdp.com:61616
ccdp.main.queue=CCDP-Engine
ccdp.log.dir=${CCDP_HOME}/logs


#################################################################
##
##  Stores any string used by the tasking interface to connect to a broker
##  if required.
##
taskingIntf.broker.connection=failover://tcp://localhost:61616
#failover://tcp://ax-ccdp.com:61616

#################################################################
##
##  Stores the name of the channel used to send tasks to the Scheduler.  This
##  could be the name of a queue, a directory, etc.
##
taskingIntf.to.scheduler.channel=TaskingQueue

#################################################################
##
## Sets a unique identifier for the framework.  It uses the assigned one
## from Mesos if not defined.
##
#taskingIntf.tasking.uuid=

#################################################################
##
## This channel is used to send a message from the Scheduler to any entity 
## listening.  If this is not defined then a sender is not used
##
#taskingIntf.from.scheduler.channel=CcdpTaskingActivity


#################################################################
##
##  A comma delimited list of host IDs that should not be terminated due to lack 
##  of resource utilization.  These nodes needs to be running at any given time.
##  
do.not.terminate=i-0fa470f3da73d8ac0

#-------------------------------------------------------------------------#
#-------------- Tasking Controller Interface Configuration  --------------
#-------------------------------------------------------------------------#

#################################################################
##
## The average load for all the VMs in the same session.  Once this average 
## is reached for more than the average load time (in minutes) then it will
## start a new VM.
##
## If the max.number.of.tasks is set, then it will not run assign the task to
## the running resource when it reaches that capacity
## 
taskContrIntf.allocate.avg.load.cpu=50
taskContrIntf.allocate.avg.load.mem=50
taskContrIntf.allocate.avg.load.time=2
taskContrIntf.allocate.no.more.than=5

## Deallocation parameters, once is low it will stop tasking it and when it
## reaches 0 it stops it
taskContrIntf.deallocate.avg.load.cpu=20
taskContrIntf.deallocate.avg.load.mem=20
taskContrIntf.deallocate.avg.load.time=2


#-------------------------------------------------------------------------#
#-------------- Resource Controller Interface Configuration  -------------
#-------------------------------------------------------------------------#

#################################################################
##
## If the node or the request do not have the node type assigned then this 
## is the one used as the default
##

resourceIntf.default.image.id=ami-5d193626
resourceIntf.default.min.number.free.agents=0
resourceIntf.default.security.group=sg-54410d2f
resourceIntf.default.subnet.id=subnet-d7008b8f
resourceIntf.default.key.file.name=aws_serv_server_key
resourceIntf.default.tags={"session-id": "Service-Node", "Name": "Host-Agent"}
resourceIntf.default.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -w -t /data/ccdp
#resourceIntf.default.region=us-east-1
#resourceIntf.default.role.name=my-Role
#resourceIntf.default.proxy.url=my-url-to-ge/to/the/proxy
#resourceIntf.default.proxy.port=1234
#resourceIntf.default.credentials.file=/home/oeg/.aws/credentials
#resourceIntf.default.credentials.profile.name=default


resourceIntf.ec2.image.id=ami-5d193626
resourceIntf.ec2.min.number.free.agents=0
resourceIntf.ec2.security.group=sg-54410d2f
resourceIntf.ec2.subnet.id=subnet-d7008b8f
resourceIntf.ec2.key.file.name=aws_serv_server_key
resourceIntf.ec2.tags={"session-id": "Service-Node", "Name": "Host-Agent"}
resourceIntf.ec2.startup.command=/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -w -t /data/ccdp
#resourceIntf.ec2.region=us-east-1
#resourceIntf.ec2.role.name=my-Role
#resourceIntf.ec2.proxy.url=my-url-to-ge/to/the/proxy
#resourceIntf.ec2.proxy.port=1234
#resourceIntf.ec2.credentials.file=/home/oeg/.aws/credentials
#resourceIntf.ec2.credentials.profile.name=default

resourceIntf.nifi.image.id=ami-0a65a270
resourceIntf.nifi.min.number.free.agents=3
resourceIntf.nifi.security.group=sg-9e30a2ed
resourceIntf.nifi.subnet.id=subnet-d7008b8f
resourceIntf.nifi.key.file.name=aws_serv_server_key
resourceIntf.nifi.tags={"session-id": "Service-Node", "Name": "Nifi-Node"}
resourceIntf.nifi.startup.command=/data/ccdp/startup.sh


#/data/ccdp/ccdp_install.py -a download -d s3://ccdp-settings/ccdp-engine.tgz -w -t /data/ccdp
#resourceIntf.ec2.region=us-east-1
#resourceIntf.ec2.role.name=my-Role
#resourceIntf.ec2.proxy.url=my-url-to-ge/to/the/proxy
#resourceIntf.ec2.proxy.port=1234
#resourceIntf.ec2.credentials.file=/home/oeg/.aws/credentials
#resourceIntf.ec2.credentials.profile.name=default



#-------------------------------------------------------------------------#
#-------------- Storage Controller Interface Configuration  --------------
#-------------------------------------------------------------------------#

#################################################################
##
#storageIntf








